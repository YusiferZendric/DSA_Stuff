<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Minimum Recolors Visualization</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .window {
            display: inline-block;
            padding: 0.5rem;
            margin: 0.5rem;
            border: 2px solid #4A5568;
            border-radius: 0.25rem;
        }
        .highlight {
            background-color: #68D391;
        }
        .highlight-wrong {
            background-color: #F56565;
        }
    </style>
</head>
<body class="bg-gray-100 p-6">
    <div class="container mx-auto">
        <h1 class="text-2xl font-bold mb-4">Minimum Recolors Comparison</h1>
        <div class="mb-4">
            <label for="inputString" class="block text-gray-700">String:</label>
            <input type="text" id="inputString" class="border rounded p-2 w-full" value="WBBWWWWBBWWBBBBWWBBWWBBBW">
        </div>
        <div class="mb-4">
            <label for="inputK" class="block text-gray-700">K:</label>
            <input type="number" id="inputK" class="border rounded p-2 w-full" value="15">
        </div>
        <button id="visualizeBtn" class="bg-blue-500 text-white px-4 py-2 rounded">Visualize</button>
        <div class="mt-6">
            <div class="flex justify-between">
                <div>
                    <h2 class="text-xl font-bold mb-2">With `curr -= 1` for 'W'</h2>
                    <div id="withCurr" class="p-4 bg-white rounded shadow"></div>
                </div>
                <div>
                    <h2 class="text-xl font-bold mb-2">Without `curr -= 1` for 'W'</h2>
                    <div id="withoutCurr" class="p-4 bg-white rounded shadow"></div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('visualizeBtn').addEventListener('click', () => {
            const s = document.getElementById('inputString').value;
            const k = parseInt(document.getElementById('inputK').value);
            visualize(s, k);
        });

        function visualize(s, k) {
            const withCurrContainer = document.getElementById('withCurr');
            const withoutCurrContainer = document.getElementById('withoutCurr');
            withCurrContainer.innerHTML = '';
            withoutCurrContainer.innerHTML = '';

            const n = s.length;

            // Visualization with `curr -= 1`
            let i = 0, j = 0, curr = 0, ans = Infinity;
            while (j < n) {
                if (s[j] === 'W') curr++;
                if ((j - i + 1) < k) {
                    j++;
                } else {
                    ans = Math.min(ans, curr);
                    renderWindow(withCurrContainer, s, i, j, curr, ans, true);
                    j++;
                    if (s[i] === 'W') curr--;
                    i++;
                }
            }
            renderFinalResult(withCurrContainer, ans);

            // Visualization without `curr -= 1`
            i = 0, j = 0, curr = 0, ans = Infinity;
            while (j < n) {
                if (s[j] === 'W') curr++;
                if ((j - i + 1) < k) {
                    j++;
                } else {
                    ans = Math.min(ans, curr);
                    renderWindow(withoutCurrContainer, s, i, j, curr, ans, false);
                    j++;
                    i++;
                }
            }
            renderFinalResult(withoutCurrContainer, ans);
        }

        function renderWindow(container, s, i, j, curr, ans, withCurr) {
            const windowStr = s.substring(i, j + 1);
            const windowDiv = document.createElement('div');
            windowDiv.className = 'window';
            windowDiv.innerHTML = `
                <div>Window: ${windowStr.split('').map((c, idx) => `<span class="${c === 'W' ? (withCurr ? 'highlight' : 'highlight-wrong') : ''}">${c}</span>`).join(' ')}</div>
                <div>Current 'W' count: ${curr}</div>
                <div>Minimum recolors: ${ans}</div>
            `;
            container.appendChild(windowDiv);
        }

        function renderFinalResult(container, ans) {
            const resultDiv = document.createElement('div');
            resultDiv.className = 'mt-4 p-4 bg-gray-200 rounded';
            resultDiv.innerHTML = `<div>Final result: ${ans}</div>`;
            container.appendChild(resultDiv);
        }
    </script>
</body>
</html>